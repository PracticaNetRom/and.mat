@model IEnumerable<SummerCamp2017.Models.Announcement>
<style>
    .classColorz {
        background-color: #f5f5ef;
    }
</style>
@{
    List<string> l = new List<string>();
    foreach (var item in Model)
    {
        if (l.Exists(c => c == item.CategoryName) == false)
        {
            l.Add(item.CategoryName);
        }

    }
}
<h3>Announcements</h3>
<div class="dropdown" >
    <div style="display:inline">
        <button class="btn dropdown-toggle" type="button" data-toggle="dropdown">
            Categories
            <span class="caret"></span>
        </button>
        <ul class="dropdown-menu" id="drop">
            @foreach (var item in l)
            {
                <li><a href="#">@Html.DisplayFor(modelItem => item)</a></li>
            }

        </ul>
        <div class="form-group" style="float:right">
            <input type="text" class="form-control" onkeyup="myFunction()" id="search" placeholder="Search">
        </div>
    </div>
    
</div>
@*<div>
        <input tipy="text" id="search"/>
        <button id="bt">Search</button>
    </div>*@

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table" id="tableAnn">
    <thead>
        <tr>
            <th></th>
            <th>
                Category
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Closed)
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {

            {
                <tr>
                    <td>
                        @Html.HiddenFor(modelItem => item.AnnouncementId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CategoryName)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Closed)
                    </td>

                    <td>
                        @Html.ActionLink("Details", "Details", new { id = item.AnnouncementId })


                    </td>
                </tr>
            }

        }
    </tbody>
</table>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>


<script>
    function myFunction() {
        var val = $("#search").val().toUpperCase();
        var table = $("#tableAnn").find("tbody");
        var tr = table.find("tr");
        for (var j = 0; j < tr.length; j++) {
            var td = $(tr[j]).find("td");
            var aa = td[2].innerText.trim().toUpperCase();
            //var n = aa.search(val);
            // if (n == 0) {
            if (aa.indexOf(val) > -1) {
                $(tr[j]).show();
            }
            else {
                $(tr[j]).hide();
            }
        }



    }
    $(document).ready(function () {

        debugger





        // $("#bt").on('click', function () {
        //$("#search").on('keypress',function () {




        var table = $("#tableAnn").find("tbody");
        var tr = table.find("tr");

        for (var i = 0; i < tr.length; i++) {

            var td = $(tr[i]).find("td");
            var aa = td.find("input");

            if ($(aa).is(':checked')) {
                $(tr[i]).addClass("classColorz");
            }
        }

        $("li").on("click", function () {

            var table = $("#tableAnn").find("tbody");
            var tr = table.find("tr");
            for (var i = 0; i < tr.length; i++) {
                var td = $(tr[i]).find("td");
                var value = td[1].innerText.trim();


                var dropDown = this.innerText.trim();

                if (value !== dropDown) {
                    $(tr[i]).hide();
                }
                else {
                    $(tr[i]).show();
                }
            }
        })

    }
    )
</script>

